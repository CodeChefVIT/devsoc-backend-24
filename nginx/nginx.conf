# Server block for your application
  server {
    # Listen on the port exposed by the container (80 in this example)
    listen 80;
    http2  on;
    gzip on;
    gzip_proxied any;
    gzip_types text/plain text/css application/json application/javascript;

    # Access log for debugging
    access_log /var/log/nginx/access.log;

    # Serve static files from the application directory
    location / {

      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,Authorization,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }

      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
      add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;

      # Forward requests to the application container (change 127.0.0.1 to your API container name if different)
      proxy_pass http://api:8080; 

      # Adjust these settings based on your application's needs
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_cache_bypass $http_upgrade;
    }
  }
